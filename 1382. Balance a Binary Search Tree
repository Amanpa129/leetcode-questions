class Solution {
    private void storeInorder(TreeNode root , List<Integer> nodes){
        if(root == null){
            return ; 
        }
        storeInorder(root.left , nodes);
        nodes.add(root.val);
        storeInorder(root.right , nodes);
    }
    private TreeNode build(List<Integer> nodes , int start , int end){
        if(start> end){
            return null;
        }
        int mid = (start + end)/2;
        TreeNode root = new TreeNode(nodes.get(mid));
        root.left = build(nodes , start , mid-1);
        root.right = build(nodes , mid+1 , end);
        return root;
    }
    public TreeNode balanceBST(TreeNode root) {
        ArrayList<Integer> nodes = new ArrayList<>();
        storeInorder(root , nodes);
        return build(nodes , 0 , nodes.size()-1);
        
    }
}
